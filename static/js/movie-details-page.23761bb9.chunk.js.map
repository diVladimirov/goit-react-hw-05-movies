{"version":3,"file":"static/js/movie-details-page.23761bb9.chunk.js","mappings":"qPAEaA,EAAaC,EAAAA,GAAAA,KAAH,oFAMVC,EAAcD,EAAAA,GAAAA,MAAH,uNAaXE,EAAeF,EAAAA,GAAAA,OAAH,8lB,iJClBZG,EAAgBH,EAAAA,GAAAA,QAAH,0CAIbI,EAAqBJ,EAAAA,GAAAA,IAAH,oFAMlBK,GAAgBL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,qL,mBCmD1B,EAvDqB,SAAC,GAAwB,IAAtBO,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACpBC,GAAQC,EAAAA,EAAAA,MAARD,IAENE,EAQEJ,EARFI,eACAC,EAOEL,EAPFK,aACAC,EAMEN,EANFM,SACAC,EAKEP,EALFO,cACAC,EAIER,EAJFQ,MACAC,EAGET,EAHFS,aACAC,EAEEV,EAFFU,OACAC,EACEX,EADFW,YAEF,OACE,UAACf,EAAD,YACE,SAAC,KAAD,CAAcgB,KAAK,SAASC,QAASZ,EAArC,sBAGA,wBAAKG,IACJG,GACC,gBACEO,IAAG,0CAAqCP,GACxCQ,IAAKP,KAGP,gBACEM,IAAG,0CAAqCH,GACxCI,IAAKP,KAIT,0CAAkBH,MAEhB,uCAEoB,IAAjBI,GACC,gCAAQA,MAER,iDAKN,2BACE,mCACCC,GAAUA,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALD,UAEnD,uBAAIX,KACJ,UAACT,EAAD,YACE,SAACC,EAAD,CAAeqB,GAAE,UAAKjB,EAAL,SAAjB,mBACA,SAACJ,EAAD,CAAeqB,GAAE,UAAKjB,EAAL,aAAjB,4BCpDFkB,GAAOC,EAAAA,EAAAA,OAAK,kBAChB,iCAIIC,GAAUD,EAAAA,EAAAA,OAAK,kBACnB,iCAyCF,EApCyB,WACvB,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOvB,EAAP,KAAawB,EAAb,KACMC,GAAOC,EAAAA,EAAAA,MACPC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MACT5B,GAAQC,EAAAA,EAAAA,MAARD,KAER6B,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBP,EAAKQ,UACpBC,MAAK,YAAe,IAAZT,EAAW,EAAXA,KACPD,EAAQC,MAETU,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAACX,EAAKQ,WAET,IAIQM,EAAqBvC,EAArBuC,QAASC,EAAYxC,EAAZwC,QAEjB,OACE,iCACE,SAAC,EAAD,CAAcvC,SARD,WAAO,IAAD,IACrB0B,EAAQc,KAAR,iBAAaZ,QAAb,IAAaA,GAAb,UAAaA,EAAUa,aAAvB,aAAa,EAAiBC,YAA9B,QAAsC,MAOF3C,KAAMA,KACxC,UAAC,EAAA4C,SAAD,CAAUC,UAAU,oDAApB,WACE,SAAC,KAAD,CAAOC,KAAI,UAAK5C,EAAL,SAAX,UACE,SAACkB,EAAD,CAAMmB,QAASA,OAEjB,SAAC,KAAD,CAAOO,KAAI,UAAK5C,EAAL,aAAX,UACE,SAACoB,EAAD,CAASkB,QAASA,c,6HC5CtBO,EAAS,4CACTC,EAAW,+BAMJhB,EAAoB,SAAAf,GAAE,OACjCgC,IAAAA,IAAA,cACED,EADF,kBACoB/B,GADpB,OACyB8B,EADzB,yCAGWG,EAAsB,kBACjCD,IAAAA,IAAA,UAAaD,EAAb,8BAA2CD,KAEhCI,EAAuB,SAAAC,GAAK,OACvCH,IAAAA,IAAA,UAAaD,EAAb,wBAAqCD,EAArC,kBAAqDK","sources":["components/Movies/Movies.styled.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.js","pages/MovieDetailsPage.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const InputStyled = styled.input`\n  display: inline-block;\n  width: 200px;\n  font: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  padding: 8px 16px;\n  ::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n\nexport const ButtonStyled = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #10a446;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #f2e310;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const SectionStyled = styled.section`\n  padding: 20px;\n`;\n\nexport const LinksWrapperStyled = styled.div`\n  display: flex;\n  gap: 50px;\n  justify-content: center;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 28px;\n  transition: color 250ms linear;\n  color: #f2e310;\n  &.active {\n    color: #3807fd;\n  }\n`;\n","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport {\n  SectionStyled,\n  LinksWrapperStyled,\n  NavLinkStyled,\n} from './MovieDetails.styled';\nimport { ButtonStyled } from 'components/Movies/Movies.styled';\n\nconst MovieDetails = ({ film, onGoBack }) => {\n  const { url } = useRouteMatch();\n  const {\n    original_title,\n    release_date,\n    overview,\n    backdrop_path,\n    title,\n    vote_average,\n    genres,\n    poster_path,\n  } = film;\n  return (\n    <SectionStyled>\n      <ButtonStyled type=\"button\" onClick={onGoBack}>\n        Go back\n      </ButtonStyled>\n      <h2>{original_title}</h2>\n      {backdrop_path ? (\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${backdrop_path}`}\n          alt={title}\n        />\n      ) : (\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={title}\n        />\n      )}\n\n      <p>Release date: {release_date}</p>\n      {\n        <p>\n          User score:\n          {vote_average !== 0 ? (\n            <span> {vote_average}</span>\n          ) : (\n            <span>not scored yet</span>\n          )}\n        </p>\n      }\n\n      <ul>\n        <p>Genres:</p>\n        {genres && genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n      </ul>\n      <p>{overview}</p>\n      <LinksWrapperStyled>\n        <NavLinkStyled to={`${url}/cast`}>Cast</NavLinkStyled>\n        <NavLinkStyled to={`${url}/reviews `}>Reviews</NavLinkStyled>\n      </LinksWrapperStyled>\n    </SectionStyled>\n  );\n};\n\nexport default MovieDetails;\n","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { useParams, Route } from 'react-router';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\nimport { fetchFilmsDetails } from '../services/api';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\n\nconst Cast = lazy(() =>\n  import(\n    '../components/Cast/Cast.js' /* webpackChunkName: \"movieDetailsPage-cast\" */\n  )\n);\nconst Reviews = lazy(() =>\n  import(\n    '../components/Reviews/Reviews.js' /* webpackChunkName: \"movieDetailsPage-reviews\" */\n  )\n);\n\nconst MovieDetailsPage = () => {\n  const [film, setFilm] = useState([]);\n  const data = useParams();\n  const history = useHistory();\n  const location = useLocation();\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    fetchFilmsDetails(data.moviesId)\n      .then(({ data }) => {\n        setFilm(data);\n      })\n      .catch(error => console.log(error));\n  }, [data.moviesId]);\n\n  const onGoBack = () => {\n    history.push(location?.state?.from ?? '/');\n  };\n\n  const { credits, reviews } = film;\n\n  return (\n    <>\n      <MovieDetails onGoBack={onGoBack} film={film} />\n      <Suspense fallback={<h1>Loading Cast or Reviews</h1>}>\n        <Route path={`${url}/cast`}>\n          <Cast credits={credits} />\n        </Route>\n        <Route path={`${url}/reviews `}>\n          <Reviews reviews={reviews} />\n        </Route>\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst APIkey = '?api_key=d0d2393ff57617bcd19c89c64bc8a08d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchFilms = page =>\n  axios.get(`\n  ${BASE_URL}/trending/movie/day${APIkey}&page=${page}`);\n\nexport const fetchFilmsDetails = id =>\n  axios.get(`\n  ${BASE_URL}/movie/${id}${APIkey}&append_to_response=credits,reviews`);\n\nexport const fetchTrendingMovies = () =>\n  axios.get(`${BASE_URL}/trending/movie/day${APIkey}`);\n\nexport const fetchMoviesFromQuery = query =>\n  axios.get(`${BASE_URL}/search/movie${APIkey}&query=${query}`);\n"],"names":["FormStyled","styled","InputStyled","ButtonStyled","SectionStyled","LinksWrapperStyled","NavLinkStyled","NavLink","film","onGoBack","url","useRouteMatch","original_title","release_date","overview","backdrop_path","title","vote_average","genres","poster_path","type","onClick","src","alt","map","id","name","to","Cast","lazy","Reviews","useState","setFilm","data","useParams","history","useHistory","location","useLocation","useEffect","fetchFilmsDetails","moviesId","then","catch","error","console","log","credits","reviews","push","state","from","Suspense","fallback","path","APIkey","BASE_URL","axios","fetchTrendingMovies","fetchMoviesFromQuery","query"],"sourceRoot":""}