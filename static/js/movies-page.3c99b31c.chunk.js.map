{"version":3,"file":"static/js/movies-page.3c99b31c.chunk.js","mappings":"yNAEaA,EAAcC,EAAAA,GAAAA,GAAH,kEAKXC,EAAaD,EAAAA,GAAAA,GAAH,yR,mICLVE,EAAaF,EAAAA,GAAAA,KAAH,oFAMVG,EAAcH,EAAAA,GAAAA,MAAH,uNAaXI,EAAeJ,EAAAA,GAAAA,OAAH,8lB,qJC8BzB,EA9Ce,SAAC,GAAkC,IAAhCK,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WACtBC,GAAQC,EAAAA,EAAAA,MAARD,IACFE,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,UAAC,KAAD,CAAYC,SAAUN,EAAtB,WACE,SAAC,KAAD,CACEO,KAAK,OACLC,YAAY,yBACZC,KAAK,iBAEP,SAAC,KAAD,CAAcF,KAAK,SAAnB,+BAEF,SAAC,IAAD,UACGN,GACCA,EAAWS,KACT,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAIC,EAAvB,EAAuBA,cAAeC,EAAtC,EAAsCA,MAAOC,EAA7C,EAA6CA,YAA7C,OACE,yBACE,UAAC,KAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKf,EAAL,YAAYU,GACpBM,MAAO,CAAEC,KAAMf,IAHnB,WAME,uBAAIO,IACHE,GACC,gBACEO,IAAG,0CAAqCP,GACxCQ,IAAKP,KAGP,gBACEM,IAAG,0CAAqCL,GACxCM,IAAKP,QAhBJF,YCgBvB,EAlCmB,WACjB,OAAmCU,EAAAA,EAAAA,UAAS,IAA5C,eAAOrB,EAAP,KAAmBsB,EAAnB,KACMC,GAAUC,EAAAA,EAAAA,MAChB,GAA6BpB,EAAAA,EAAAA,MAArBY,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,QAElBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeF,EAAOG,MAAM,GAAIH,EAAOI,QACxB,KAAjBF,IAGJG,EAAAA,EAAAA,IAAqBH,GAClBI,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPV,EAAaU,EAAKC,YAEnBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEf,CAACV,IAcJ,OAAO,SAAC,EAAD,CAAQpB,SAZM,SAAAiC,GACnBA,EAAMC,iBACNH,QAAQC,IAAIC,EAAME,QAElBjB,EAAQkB,KAAK,CACXzB,SAAUA,EACVS,OAAO,SAAD,OAAWa,EAAME,OAAOE,YAAYC,SAG5CL,EAAME,OAAOE,YAAYC,MAAQ,IAGI3C,WAAYA,M,6HClC/C4C,EAAS,4CACTC,EAAW,+BAMJC,EAAoB,SAAAnC,GAAE,OACjCoC,IAAAA,IAAA,cACEF,EADF,kBACoBlC,GADpB,OACyBiC,EADzB,yCAGWI,EAAsB,kBACjCD,IAAAA,IAAA,UAAaF,EAAb,8BAA2CD,KAEhCd,EAAuB,SAAAmB,GAAK,OACvCF,IAAAA,IAAA,UAAaF,EAAb,wBAAqCD,EAArC,kBAAqDK","sources":["components/Home/Home.styled.js","components/Movies/Movies.styled.js","components/Movies/Movies.js","pages/MoviesPage.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitleStyled = styled.h1`\n  text-align: center;\n  color: #3807fd;\n`;\n\nexport const ListStyled = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const InputStyled = styled.input`\n  display: inline-block;\n  width: 200px;\n  font: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  padding: 8px 16px;\n  ::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n\nexport const ButtonStyled = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #10a446;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #f2e310;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;\n","import React from 'react';\nimport { Link, useRouteMatch, useLocation } from 'react-router-dom';\nimport { FormStyled, InputStyled, ButtonStyled } from './Movies.styled';\nimport { ListStyled } from 'components/Home/Home.styled';\n\nconst Movies = ({ handleSubmit, moviesList }) => {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n\n  return (\n    <>\n      <FormStyled onSubmit={handleSubmit}>\n        <InputStyled\n          type=\"text\"\n          placeholder=\"Enter movie to find...\"\n          name=\"movieToFind\"\n        ></InputStyled>\n        <ButtonStyled type=\"submit\">Search Movies</ButtonStyled>\n      </FormStyled>\n      <ListStyled>\n        {moviesList &&\n          moviesList.map(\n            ({ original_title, id, backdrop_path, title, poster_path }) => (\n              <li key={id}>\n                <Link\n                  to={{\n                    pathname: `${url}/${id}`,\n                    state: { from: location },\n                  }}\n                >\n                  <p>{original_title}</p>\n                  {backdrop_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w500/${backdrop_path}`}\n                      alt={title}\n                    />\n                  ) : (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                      alt={title}\n                    />\n                  )}\n                </Link>\n              </li>\n            )\n          )}\n      </ListStyled>\n    </>\n  );\n};\n\nexport default Movies;\n","import { useState, useEffect } from 'react';\nimport { fetchMoviesFromQuery } from 'services/api';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport Movies from 'components/Movies/Movies';\n\nconst MoviesPage = () => {\n  const [moviesList, setMovieList] = useState([]);\n  const history = useHistory();\n  const { pathname, search } = useLocation();\n\n  useEffect(() => {\n    const correctInput = search.slice(12, search.length);\n    if (correctInput === '') {\n      return;\n    }\n    fetchMoviesFromQuery(correctInput)\n      .then(({ data }) => {\n        setMovieList(data.results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [search]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(event.target);\n\n    history.push({\n      pathname: pathname,\n      search: `query=${event.target.movieToFind.value}`,\n    });\n\n    event.target.movieToFind.value = '';\n  };\n\n  return <Movies onSubmit={handleSubmit} moviesList={moviesList} />;\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst APIkey = '?api_key=d0d2393ff57617bcd19c89c64bc8a08d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchFilms = page =>\n  axios.get(`\n  ${BASE_URL}/trending/movie/day${APIkey}&page=${page}`);\n\nexport const fetchFilmsDetails = id =>\n  axios.get(`\n  ${BASE_URL}/movie/${id}${APIkey}&append_to_response=credits,reviews`);\n\nexport const fetchTrendingMovies = () =>\n  axios.get(`${BASE_URL}/trending/movie/day${APIkey}`);\n\nexport const fetchMoviesFromQuery = query =>\n  axios.get(`${BASE_URL}/search/movie${APIkey}&query=${query}`);\n"],"names":["TitleStyled","styled","ListStyled","FormStyled","InputStyled","ButtonStyled","handleSubmit","moviesList","url","useRouteMatch","location","useLocation","onSubmit","type","placeholder","name","map","original_title","id","backdrop_path","title","poster_path","to","pathname","state","from","src","alt","useState","setMovieList","history","useHistory","search","useEffect","correctInput","slice","length","fetchMoviesFromQuery","then","data","results","catch","error","console","log","event","preventDefault","target","push","movieToFind","value","APIkey","BASE_URL","fetchFilmsDetails","axios","fetchTrendingMovies","query"],"sourceRoot":""}